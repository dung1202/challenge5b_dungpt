def partition(array, begin, end):
    pivot_idx = begin
    for i in range(begin+1, end+1):
        if array[i] <= array[begin]:
            pivot_idx += 1
            array[i], array[pivot_idx] = array[pivot_idx], array[i]
    array[pivot_idx], array[begin] = array[begin], array[pivot_idx]
    return pivot_idx


def quick_sort_recursion(array, begin, end):
    if begin >= end:
        return
    pivot_idx = partition(array, begin, end)
    quick_sort_recursion(array, begin, pivot_idx-1)
    quick_sort_recursion(array, pivot_idx+1, end)


def quick_sort(array, begin=0, end=None):
    if end is None:
        end = len(array) - 1

    return quick_sort_recursion(array, begin, end)


def chia(mang):
    if len(mang) == 1 and mang[int(len(mang)/2)] != so:
        print("khong")
        return 0
    elif mang[int(len(mang)/2)] == so:
        print("co")
        return 0
    elif mang[int(len(mang)/2)] > so:
        chia(mang[:int(len(mang)/2)])
    else:
        chia(mang[int(len(mang)/2)+1:])


a = input("nhap day: ").split()
so = int(input("nhap so: "))

quick_sort(a)
for i in range(0, len(a)):
    a[i] = int(a[i])
if a[int(len(a)/2)] == so:
    print("co")
elif a[int(len(a)/2)] > so:
    chia(a[:int(len(a)/2)])
else:
    chia(a[int(len(a)/2)+1:])
